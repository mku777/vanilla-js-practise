{"version":3,"sources":["entities/arrays.js","bubbling.js"],"names":["exports","default","_default","_arrays","_interopRequireDefault","require","obj","__esModule","console","log","def","lazyImages","document","querySelectorAll","forEach","image","addEventListener","onImageLoaded","once","evt","target","classList","add"],"mappings":";;ACAA,IAAAG,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AAAmC,SAAAD,uBAAAE,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAL,OAAA,EAAAK,GAAA;AACnCE,OAAO,CAACC,GAAG,CAACC,eAAG,CAAC;;AAEhB,eDHe,GAAG,EAElB;ACEA,ADDA;ACEA,ADAA;ACCA,ADCA;ACAA,ADCA;AAEA;ACDA,ADIA;ACHA,ADIA;ACHA,ADIA;ACHA,ADKA;ACJA,ADKA;AACA;ACJA,ADMA;ACLA,ADMA;ACLA,ADMA;ACLA,ADMA;ACLA,ADMA;AAEA;ACNA,ADOA;ACNA,ADOA;ACNA,ADOA;ACNA,ADOA;ACNA,ADQA;AAEA;ACRA,ADSA;AAGA;ACVA,ADWA;ACVA,ADWA;ACVA,ADWA;ACVA,ADWA;ACVA,ADYA;ACXA,ADYA;AAEI;ACZJ,ADaI;ACZJ,ADeA;AACA;ACdA,ADgBA;ACfA,ADgBA;ACfA,ADgBA;ACfA,ADiBA;AACA;AChBA,ADiBA;AAIA;ACnBA,ADqBA;ACpBA,ADsBA;ACrBA,ADsBA;AAEA;ACtBA,ADuBA;ACtBA,ADyBA;ACxBA,ADyBA;ACxBA,AD2BA;AAGA;AC5BA,AD8BA;AAGA;AC/BA,ADgCA;AC/BA,ADgCA;AC/BA,ADgCA;AC/BA,ADgCA;AC/BA,ADgCA;AC/BA,ADgCA;AC/BA,ADiCA;AChCA,ADiCA;AChCA,ADkCA;ACjCA,ADkCA;AACA;ACjCA,ADkCA;ACjCA,ADkCA;AAGA;ACnCA,ADoCA;AAEA;ACpCA,ADwCA;ACvCA,ADwCA;ACvCA,ADwCA;ACvCA,ADwCA;ACvCA,AD0CA;ACzCA,AD2CA;AC1CA,AD2CA;AC1CA,AD2CA;AC1CA,AD2CA;AC1CA,AD6CA;AC5CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD+CA;AC9CA,AD+CA;AC9CA,AD+CA;AAEA;AC/CA,ADiDA;AChDA,ADiDA;AChDA,ADkDA;ACjDA,ADmDA;AACA;AClDA,ADmDA;AAEA;ACnDA,ADsDA;ACrDA,ADsDA;ACrDA,ADsDA;ACrDA,ADsDA;ACrDA,ADsDA;ACrDA,ADsDA;AAGA;ACvDA,ADwDA;ACvDA,ADwDA;ACvDA,ADwDA;AAEA;ACxDA,AD0DA;AACA;ACzDA,AD0DA;AACA;ACzDA,AD0DA;ACzDA,AD0DA;AACA;ACzDA,AD0DA;AACA;ACzDA,AD2DA;AC1DA,AD4DA;AC3DA,AD6DA;AC5DA,AD8DA;AAIA;AChEA,ADiEA;AChEA,ADiEA;AChEA,ADiEA;AACA;AChEA,ADiEA;AAEA;ACjEA,ADkEA;ACjEA,ADkEA;AAEA;AClEA,ADqEA;AAEA;ACrEA,ADsEA;ACrEA,ADsEA;AACA;ACrEA,ADsEA;AAEA;ACtEA,ADyEA;ACxEA,ADyEA;ACxEA,ADyEA;ACxEA,ADyEA;ACxEA,ADyEA;ACxEA,AD0EA;ACzEA,AD0EA;ACzEA,AD0EA;ACzEA,AD2EA;AC1EA,AD6EA;AC5EA,AD6EA;AC5EA,AD6EA;AC5EA,AD6EA;AC5EA,AD6EA;AC5EA,AD6EA;AC5EA,AD6EA;AC5EA,AD6EA;AC5EA,AD6EA;AC5EA,AD6EA;AC5EA,AD6EA;AC5EA,AD6EA;AC5EA,AD6EA;AACA;AC5EA,AD6EA;AC5EA,AD6EA;AC5EA,AD6EA;AC5EA,AD6EA;AACA;AC5EA,AD6EA;AACA;AC5EA,AD6EA;AC5EA,AD6EA;AC5EA,AD6EA;AC5EA,AD6EA;AC5EA,AD6EA;AACA;AC5EA,AD6EA;AACA;AC5EA,AD6EA;AC5EA,AD8EA;AC7EA,AD8EA;AACA;AC7EA,AD8EA,IC9EMC,UAAU,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,qBAAqB,CAAC;AAEnEF,AD8EA,UC9EU,CAACG,OAAO,CAAC,UAACC,KAAK,EAAK;ADiF9B,EChFEA,KAAK,CAACC,gBAAgB,CAAC,MAAM,EAAEC,aAAa,EAAE;ADiFhD,ICjFkDC,IAAI,EAAE;ADkFxD,EClF6D,CAAC,CAAC;AAC/D,ADmFA,CCnFC,CAAC;AAEF,ADkFA,SClFSD,aAAaA,CAACE,GAAG,EAAE;ADmF5B,EClFEA,GAAG,CAACC,MAAM,CAACC,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC;AACpC,ADmtB,OAAA,CAAAC,OAAA,GAAAC,QAAA","file":"bubbling.6b67b1c1.js","sourceRoot":"..","sourcesContent":["export default 555;\r\n\r\n// const lenght = family.length - 1;\r\n// console.log(family[3]);\r\n\r\n// console.table(family);\r\n\r\n// for (let i = 0; i <= family.length -1; i += 1) {\r\n//     family[i] += ' homies';\r\n    \r\n// }\r\n\r\n\r\n// for (const famil of family) {\r\n//     console.log(famil);\r\n// }\r\n\r\n// найти сумму\r\n// const cart = [1, 2, 3, 4, 5, 6, 7, 8];\r\n// let totalSum = 0;\r\n\r\n// for (let i = 0; i < cart.length; i += 1) {\r\n//     if (cart[i] % 2 === 0) {\r\n//       totalSum += cart[i];\r\n//     }\r\n// }\r\n\r\n// for (let num of cart) {\r\n//     if (num % 2 == 0) {\r\n//       totalSum += num;\r\n//     }\r\n// }\r\n\r\n// console.log(totalSum);\r\n\r\n// const logins = [\"Ann\", \"Max\", \"Jara\", \"Thorin\"];\r\n// const loginToFind = 'Jara';\r\n\r\n\r\n// for (let i = 0; i < logins.length; i += 1) {\r\n//     if (logins[i].includes(loginToFind)) {\r\n//         console.log('мы нашли логин', loginToFind);\r\n//         break;\r\n//   }\r\n\r\n//   console.log(i);\r\n// }\r\n\r\n    // const search = logins.includes(loginToFind) ? 'мы нашли логин' : 'не нашли логин'; \r\n    // console.log(search);\r\n    \r\n    \r\n// const numbers = [51, 18, 13, 24, 7, 85, 19];\r\n// let minNumber = numbers[0];\r\n\r\n// for (let i = 0; i < numbers.length; i++) {\r\n//     if (minNumber < numbers[i]) {\r\n//         minNumber = numbers[i];\r\n    \r\n//     }\r\n// }\r\n//   console.log(minNumber);\r\n\r\n\r\n\r\n// const logins = [\"Ann\", \"Max\", \"Jara\", \"Thorin\"];\r\n\r\n// let newString = '';\r\n\r\n// for (let i = 0; i < logins.length; i++) {\r\n//     newString += `${logins[i]} ,`;\r\n    \r\n// }\r\n// newString = newString.slice(logins[0], newString.length - 1);\r\n\r\n\r\n// // newString = logins.join(', ');\r\n//   console.log(newString);\r\n\r\n\r\n// const string = 'JavaScript';\r\n\r\n\r\n// let upperString = string.toUpperCase().split('');\r\n\r\n// console.log(upperString); \r\n\r\n\r\n// for (let i = 0; i < upperString.length; i += 1) {\r\n//   if (upperString[i] === string[i]) {\r\n//     upperString[i] = upperString[i].toLowerCase();\r\n//     const newString = upperString.join(\"\");\r\n//     console.log(newString);\r\n//   }\r\n// }\r\n\r\n// let newString = string.split('')\r\n// console.log(newString);\r\n\r\n// for (const letter of newString) {\r\n//     if (letter) {\r\n//         letter.toLowerCase();\r\n//     } \r\n// }\r\n\r\n\r\n// const title = 'Top 10 benefits of React framework';\r\n// let newurl = title.toLowerCase().split(' ').join('-'); +\r\n\r\n// console.log(newurl);\r\n\r\n\r\n\r\n// const array1 = [5, 10, 15, 20];\r\n// const array2 = [10, 20, 30];\r\n// const newarray = array1.concat(array2);\r\n// console.log(newarray);\r\n\r\n\r\n// let array3 = 0;\r\n\r\n// for (let i = 0; i < newarray.length; i++) {\r\n//   array3 += newarray[i];\r\n// }\r\n//   console.log(array3);\r\n\r\n\r\n// const cards = ['card1', 'card2', 'card3', 'card4', 'card5'];\r\n\r\n// const el = cards.indexOf('card3');\r\n// const cardToRemove = cards.splice(el, 1)\r\n// console.log(cards);\r\n\r\n// const cardTOInsert = 'Ann';\r\n// const index = cards.splice(3, 0, cardTOInsert);\r\n// console.log(cards)\r\n\r\n// const cardToUpdate = 'card2'\r\n\r\n// const upd = cards.splice(1, 1, \"lol\");\r\n// console.log(cards);\r\n\r\n// const numbers = [2, 4, 6, 8, 10, 13, 14, 15];\r\n\r\n// const newArr = numbers.forEach( (number, index, array) => {\r\n//    return console.log(`${number} plus ${index}`);\r\n// })\r\n\r\n// const doubleNumbers = numbers.map((number) => number *= 2);\r\n\r\n\r\n// const products = [\r\n//   { name: \"Radar\", price: 1300, quantity: 4 },\r\n//   { name: \"Scanner\", price: 2700, quantity: 3 },\r\n//   { name: \"Droid\", price: 400, quantity: 7 },\r\n//   { name: \"Grip\", price: 1200, quantity: 9 },\r\n// ];\r\n\r\n\r\n// const newNames = products.map(\r\n//     product => (product.price = Math.round(product.price * 1.1))\r\n// );\r\n// console.log(newNames);\r\n\r\n// const nameToUpdate = \"Droid\";\r\n\r\n// const droidToUpdate = products.map((product) => {\r\n//   if (nameToUpdate === product.name) {\r\n//     return {\r\n//       ...product,\r\n//       quantity: (product.quantity += 3),\r\n//     };\r\n//   }\r\n//   return product;\r\n// });\r\n\r\n// console.log(droidToUpdate);\r\n\r\n// const numbers = [2, 4, 6, 8, 10, 13, 14, 15];\r\n\r\n// const filteredNumbers = numbers.filter((number) => number > 10);\r\n\r\n// console.log(filteredNumbers);\r\n\r\n\r\n\r\n// const products = [\r\n//   { name: \"Radar\", price: 1300, quantity: 4, isOn: true },\r\n//   { name: \"Scanner\", price: 2700, quantity: 3, isOn: false },\r\n//   { name: \"Droid\", price: 400, quantity: 7, isOn: true },\r\n//   { name: \"Grip\", price: 1200, quantity: 9, isOn: false },\r\n// ];\r\n\r\n// const priceCheck = products.every(product => {\r\n//     return product.price > 50;\r\n// })\r\n\r\n// console.log(priceCheck);\r\n\r\n\r\n// const numbers = [2, 4, 6, 8, 10, 13, 14, 15];\r\n\r\n// const total = numbers.reduce((acc, number) => {\r\n//     console.log('acc ==>', acc)\r\n//     console.log('number ==>', number);\r\n//     return acc + number;\r\n// }, 0)\r\n\r\n// console.log('total ==>', total)\r\n\r\n\r\n// const salary = {\r\n//     max: 100,\r\n//     ann: 150,\r\n//     thorin: 300,\r\n// }\r\n\r\n// const total = Object.values(salary).reduce((acc, number) => {\r\n// return acc + number\r\n// }, 0)\r\n\r\n// console.log('total ==>', total)\r\n\r\n\r\n// const products = [\r\n//   {\r\n//     name: \"Radar\",\r\n//     price: 1300,\r\n//     quantity: 4,\r\n//     isOn: true,\r\n//     tags: [\"earth, moon, mars, neprune\"],\r\n//   },\r\n//   {\r\n//     name: \"Scanner\",\r\n//     price: 2700,\r\n//     quantity: 3,\r\n//     isOn: false,\r\n//     tags: [\"earth, moon, mars, venera\"],\r\n//   },\r\n//   {\r\n//     name: \"Droid\",\r\n//     price: 400,\r\n//     quantity: 7,\r\n//     isOn: true,\r\n//     tags: [\"moon, mars, neptune\"],\r\n//   },\r\n//   {\r\n//     name: \"Grip\",\r\n//     price: 1200,\r\n//     quantity: 9,\r\n//     isOn: false,\r\n//     tags: [\"earth, moon, mars, saturn\"],\r\n//   },\r\n// ];\r\n\r\n// const tags = products.reduce((tag, product) => {\r\n//     tag.push(...product.tags);\r\n//     return tag;\r\n// }, [])\r\n\r\n// console.log(tags);\r\n\r\n\r\n// const numbers = [2, 30, 6, 8, 1, 13, 14, 4];\r\n// // numbers.sort();\r\n// console.log(numbers);\r\n\r\n// // const letters = ['a', 'b', 'c', 'd', 'D', 'f', 'b', 'k', 'A', 'j', 'K'];\r\n// // letters.sort();\r\n// // console.log(letters);\r\n\r\n// const sortArr = [...numbers].sort((currentEl, nextEl) => {\r\n//     return currentEl - nextEl;\r\n// });\r\n\r\n\r\n// const sortedArr = [...products].sort((currentEl, nextEl) => {\r\n//     const result = nextEl.name[0] < currentEl.name[0];\r\n//     if (result) {\r\n//         return 1;\r\n//     }\r\n//     if (!result) {\r\n//         return -1;\r\n//     }\r\n// })\r\n\r\n// console.log(sortedArr);\r\n\r\n\r\n// const books = [\r\n//   {\r\n//     title: \"The Last Kingdom\",\r\n//     author: \"Bernard Cornwell\",\r\n//     genres: [\"adventure\", \"history\"],\r\n//   },\r\n//   {\r\n//     title: \"Beside Still Waters\",\r\n//     author: \"Robert Sheckley\",\r\n//     genres: [\"fiction\", \"mysticism\"],\r\n//   },\r\n//   {\r\n//     title: \"Redder Than Blood\",\r\n//     author: \"Tanith Lee\",\r\n//     genres: [\"horror\", \"mysticism\", \"adventure\"],\r\n//   },\r\n// ];\r\n\r\n\r\n// const allGenres = books.flatMap(book => book.genres);\r\n// const uniqueGenres = allGenres.filter((genre, index, array) => {\r\n//     return array.indexOf(genre) === index;\r\n// })\r\n    \r\n// const books = [\r\n//   {\r\n//     title: \"The Last Kingdom\",\r\n//     author: \"Bernard Cornwell\",\r\n//     rating: 8.38,\r\n//   },\r\n//   {\r\n//     title: \"Beside Still Waters\",\r\n//     author: \"Robert Sheckley\",\r\n//     rating: 8.51,\r\n//   },\r\n//   {\r\n//     title: \"The Dream of a Ridiculous Man\",\r\n//     author: \"Fyodor Dostoevsky\",\r\n//     rating: 7.75,\r\n//   },\r\n//   { title: \"Redder Than Blood\", author: \"Tanith Lee\", rating: 7.94 },\r\n//   { title: \"Enemy of God\", author: \"Bernard Cornwell\", rating: 8.67 },\r\n// ];\r\n\r\n// const MIN_RATING = 8;\r\n// const AUTHOR = \"Bernard Cornwell\";\r\n\r\n// const topRatedBooks = books.filter(book => {\r\n//     return MIN_RATING <= book.rating;\r\n// });\r\n\r\n// console.log(topRatedBooks);\r\n\r\n// const booksByAuthor = books.filter(book => {\r\n//     return AUTHOR === book.author;\r\n// })\r\n\r\n// console.log(booksByAuthor);\r\n\r\n\r\n// const users = [\r\n//   {\r\n//     name: \"Moore Hensley\",\r\n//     email: \"moorehensley@indexia.com\",\r\n//     eyeColor: \"blue\",\r\n//     friends: [\"Sharron Pace\"],\r\n//     isActive: false,\r\n//     balance: 2811,\r\n//     gender: \"male\",\r\n//     age: 37\r\n//   },\r\n//   {\r\n//     name: \"Sharlene Bush\",\r\n//     email: \"sharlenebush@tubesys.com\",\r\n//     eyeColor: \"blue\",\r\n//     friends: [\"Briana Decker\", \"Sharron Pace\"],\r\n//     isActive: true,\r\n//     balance: 3821,\r\n//     gender: \"female\",\r\n//     age: 34\r\n//   },\r\n//   {\r\n//     name: \"Ross Vazquez\",\r\n//     email: \"rossvazquez@xinware.com\",\r\n//     eyeColor: \"green\",\r\n//     friends: [\"Marilyn Mcintosh\", \"Padilla Garrison\", \"Naomi Buckner\"],\r\n//     isActive: false,\r\n//     balance: 3793,\r\n//     gender: \"male\",\r\n//     age: 24\r\n//   },\r\n//   {\r\n//     name: \"Elma Head\",\r\n//     email: \"elmahead@omatom.com\",\r\n//     eyeColor: \"green\",\r\n//     friends: [\"Goldie Gentry\", \"Aisha Tran\"],\r\n//     isActive: true,\r\n//     balance: 2278,\r\n//     gender: \"female\",\r\n//     age: 21\r\n//   },\r\n//   {\r\n//     name: \"Carey Barr\",\r\n//     email: \"careybarr@nurali.com\",\r\n//     eyeColor: \"blue\",\r\n//     friends: [\"Jordan Sampson\", \"Eddie Strong\"],\r\n//     isActive: true,\r\n//     balance: 3951,\r\n//     gender: \"male\",\r\n//     age: 27\r\n//   },\r\n//   {\r\n//     name: \"Blackburn Dotson\",\r\n//     email: \"blackburndotson@furnigeer.com\",\r\n//     eyeColor: \"brown\",\r\n//     friends: [\"Jacklyn Lucas\", \"Linda Chapman\"],\r\n//     isActive: false,\r\n//     balance: 1498,\r\n//     gender: \"male\",\r\n//     age: 38\r\n//   },\r\n//   {\r\n//     name: \"Sheree Anthony\",\r\n//     email: \"shereeanthony@kog.com\",\r\n//     eyeColor: \"brown\",\r\n//     friends: [\"Goldie Gentry\", \"Briana Decker\"],\r\n//     isActive: true,\r\n//     balance: 2764,\r\n//     gender: \"female\",\r\n//     age: 39\r\n//     }\r\n  \r\n  \r\n// ]\r\n\r\n\r\n// const getTotalBalanceByGender = (users, gender) => {\r\n//   return [...users]\r\n//     .filter((user) => user.gender === gender)\r\n//     .reduce((totalBalance, user) => totalBalance + user.balance, 0);\r\n  \r\n// }\r\n \r\n\r\n\r\n// console.log(getTotalBalanceByGender(users, 'female'));\r\n\r\n// const getSortedFriends = (users) => {\r\n//   return users.flatMap((user) => user.friends)\r\n//     .filter((friend, index, arr) => arr.indexOf(friend) === index)\r\n//     .sort((a, b) => a.localeCompare(b));\r\n//  };\r\n\r\n\r\n// console.log(getSortedFriends(users));\r\n\r\n// const getNamesSortedByFriendCount = (users) => {\r\n//   return [...users].sort((a, b) => a.friends.length - b.friends.length)\r\n//     .map(user => user.name);\r\n//  };\r\n\r\n// console.log(getNamesSortedByFriendCount(users));\r\n\r\n// const sortByName = (users) => {\r\n//   return [...users].sort((a, b) => a.name.localeCompare(b.name));\r\n// };\r\n\r\n// console.log(sortByName(users));\r\n\r\n\r\n// const getTotalFriendCount = (users) => {\r\n//     return users.reduce((acc, user) => acc + user.friends.length, 0);\r\n// };\r\n\r\n// console.log(getTotalFriendCount(users));\r\n\r\n// const calculateTotalBalance = (users) => {\r\n//     return users.reduce((acc, user) => acc + user.balance, 0);\r\n// };\r\n\r\n// console.log(calculateTotalBalance(users));\r\n\r\n// const getUsersWithFriend = (users, friendName) => {\r\n// return users.filter(user => user.friends.includes(friendName))\r\n// }\r\n// console.log(getUsersWithFriend(users, \"Briana Decker\"));\r\n\r\n\r\n// const getFriends = (users) => {\r\n//     const allFriends = users.flatMap(user => user.friends);\r\n//    return allFriends.filter((friend, index, array) => {\r\n//         return array.indexOf(friend) === index;\r\n//     })\r\n// };\r\n\r\n// console.log(getFriends(users));\r\n\r\n\r\n// const getActiveUsers = (users) => {\r\n//     return users.filter((users) => users.isActive);\r\n// };\r\n// console.log(getActiveUsers(users));\r\n\r\n\r\n// const players = {\r\n//   mango: 1270,\r\n//   poly: 468,\r\n//   ajax: 710,\r\n//   kiwi: 244,\r\n// };\r\n// const playtimes = Object.values(players);\r\n\r\n// const totalPlayTime = playtimes.reduce((acc, player) => {\r\n//     return acc + player;\r\n// }, 0)\r\n\r\n// const averagePlayTime = totalPlayTime / playtimes.length;\r\n\r\n// console.log(averagePlayTime);\r\n\r\n\r\n// const players = [\r\n//   { name: \"Mango\", playtime: 1270, gamesPlayed: 4 },\r\n//   { name: \"Poly\", playtime: 469, gamesPlayed: 2 },\r\n//   { name: \"Ajax\", playtime: 690, gamesPlayed: 3 },\r\n//   { name: \"Kiwi\", playtime: 241, gamesPlayed: 1 },\r\n// ];\r\n\r\n// const totalAveragePlaytimePerGame = players.reduce((sum, player) => {\r\n//     const average = player.playtime / player.gamesPlayed;\r\n//     console.log(average);\r\n//     return sum + average;\r\n// }, 0)\r\n\r\n// console.log(totalAveragePlaytimePerGame);\r\n\r\n// const books = [\r\n//   {\r\n//     title: \"The Last Kingdom\",\r\n//     author: \"Bernard Cornwell\",\r\n//     rating: 8.38,\r\n//   },\r\n//   {\r\n//     title: \"Beside Still Waters\",\r\n//     author: \"Robert Sheckley\",\r\n//     rating: 8.51,\r\n//   },\r\n//   {\r\n//     title: \"The Dream of a Ridiculous Man\",\r\n//     author: \"Fyodor Dostoevsky\",\r\n//     rating: 7.75,\r\n//   },\r\n//   { title: \"Redder Than Blood\", author: \"Tanith Lee\", rating: 7.94 },\r\n//   { title: \"Enemy of God\", author: \"Bernard Cornwell\", rating: 8.67 },\r\n// ];\r\n\r\n// const MIN_BOOK_RATING = 8;\r\n// // Change code below this line\r\n\r\n// const names = [...books]\r\n//   .filter((book) => book.rating > MIN_BOOK_RATING)\r\n//   .sort((a, b) => a.author.localeCompare(b.author))\r\n//   .map((book) => book.author);\r\n\r\n\r\n//   console.log(names);\r\n\r\n// const sortedByAuthorName = [...books].sort((a, b) => a.author.localeCompare(b.author));\r\n\r\n// const sortedByReversedAuthorName = [...books].sort((a, b) =>\r\n//   b.author.localeCompare(a.author)\r\n// );\r\n\r\n// const sortedByAscendingRating = [...books].sort((a, b) =>\r\n//   a.rating - b.rating)\r\n\r\n// const sortedByDescentingRating = [...books].sort((a, b) => b.rating - a.rating);\r\n\r\n\r\n\r\n// console.log(sortedByAuthorName)\r\n// console.log(sortedByReversedAuthorName);\r\n// console.log(sortedByAscendingRating);\r\n// console.log(sortedByDescentingRating);","import def from './entities/arrays'\r\nconsole.log(def);\r\n\r\n// const refs = {\r\n//   parrent: document.querySelector(\"#parent\"),\r\n//   child: document.querySelector(\"#child\"),\r\n//   innerChild: document.querySelector(\"#inner-child\"),\r\n// };\r\n\r\n// refs.parrent.addEventListener(\"click\", (e) => {\r\n//   console.log(\"parrent clicked\");\r\n//   console.log(\"e target ->\", e.target);\r\n//   console.log(\"e currentTarget ->\", e.currentTarget);\r\n// });\r\n\r\n// refs.child.addEventListener(\"click\", (e) => {\r\n//   console.log(\"child clicked\");\r\n//   console.log(\"e target ->\", e.target);\r\n//   console.log(\"e currentTarget ->\", e.currentTarget);\r\n// });\r\n\r\n// refs.innerChild.addEventListener(\"click\", (e) => {\r\n//   console.log(\"inner child clicked\");\r\n//   console.log(\"e target ->\", e.target);\r\n//   console.log(\"e currentTarget ->\", e.currentTarget);\r\n// });\r\n\r\n// const buttonsEL = document.querySelector('.js-container');\r\n\r\n// buttonsEL.addEventListener('click', (e) => {\r\n//   if (e.target.nodeName !== 'BUTTON') {\r\n//     return;\r\n//   }\r\n//   console.log(e.target.textContent);\r\n//  });\r\n\r\n// const tagsEl = document.querySelector(\".js-tags\");\r\n// let selectedTag = null;\r\n\r\n// function onTagsClick(e) {\r\n//   if (e.target.nodeName !== \"BUTTON\") {\r\n//     return;\r\n//   }\r\n\r\n//   const currentActiveButton = document.querySelector(\".tags-btn--active\");\r\n\r\n//   if (currentActiveButton) {\r\n//     currentActiveButton.classList.remove(\"tags-btn--active\");\r\n//   }\r\n\r\n//   e.target.classList.add(\"tags-btn--active\");\r\n//   selectedTag = e.target.dataset.value;\r\n//   console.log(selectedTag);\r\n// }\r\n\r\n// tagsEl.addEventListener(\"click\", onTagsClick);\r\n\r\n// const colors = [\r\n//   { hex: \"#ff4000\", rgb: \"255, 64, 0\" },\r\n//   { hex: \"#ff8000\", rgb: \"255, 128, 0\" },\r\n//   { hex: \"#ffbf00\", rgb: \"255, 128, 0\" },\r\n//   { hex: \"#ffbf00\", rgb: \"255, 191, 0\" },\r\n//   { hex: \"#ffff00\", rgb: \"255, 255, 0\" },\r\n//   { hex: \"#bfff00\", rgb: \"191, 255, 0\" },\r\n//   { hex: \"#80ff00\", rgb: \"128, 255, 0\" },\r\n//   { hex: \"#40ff00\", rgb: \"64, 255, 0\" },\r\n// ];\r\n\r\n// const palette = document.querySelector(\".palette\");\r\n// const markUp = markupCreate(colors);\r\n\r\n// palette.insertAdjacentHTML(\"afterbegin\", markUp);\r\n\r\n// function markupCreate(colors) {\r\n//   return colors\r\n//     .map((color) => {\r\n//       return `\r\n//   <div class=\"color-card\">\r\n//     <div\r\n//       class=\"color-swatch\"\r\n//       data-hex= \"${color.hex}\"\r\n//       data-rgb= \"${color.rgb}\"\r\n//       style=\"background-color: ${color.hex}\"\r\n//     ></div>\r\n//     <div class=\"color-meta\">\r\n//       <p><b>HEX</b> : ${color.hex}</p>\r\n//       <p><b>RGB</b> : ${color.rgb}</p>\r\n//     </div>\r\n//   </div>\r\n\r\n// `;\r\n//     })\r\n//     .join(\"\");\r\n// }\r\n\r\n// palette.addEventListener('click', colorPicker)\r\n\r\n// function colorPicker(e) {\r\n//   if (!e.target.classList.contains(\"color-swatch\")) {\r\n//     return;\r\n//   }\r\n//    console.log(\"colorPicker\");\r\n// }\r\n\r\n// const cordsElement = document.querySelector(\".js-coords\");\r\n// console.log(cordsElement);\r\n// const throttledOn = _.throttle(onMouseMove, 200);\r\n\r\n// let mouseMove = 0;\r\n\r\n// window.addEventListener(\"mousemove\", throttledOn);\r\n\r\n// function onMouseMove(e) {\r\n//   mouseMove += 1;\r\n\r\n//   console.log(e);\r\n\r\n//   cordsElement.textContent = `\r\n//   Кол-во вызовов ${mouseMove}, X: ${e.clientX},\r\n//   Y : ${e.clientY}`;\r\n// }\r\n\r\n// const inputEl = document.querySelector('.js-input')\r\n// const outputEl = document.querySelector('.js-output')\r\n// let inputCounter = 0;\r\n\r\n// inputEl.addEventListener('input', _.debounce(onInputChange, 500));\r\n\r\n// function onInputChange(e) {\r\n//   inputCounter += 1;\r\n\r\n//   console.log(e);\r\n\r\n//   outputEl.textContent = `Кол-во вызовов: ${inputCounter};\r\n//   значение: ${e.target.value}`;\r\n\r\n// }\r\n\r\n// const bands = [\r\n//   { label: 'Emperor' },\r\n//   { label: 'Funeral Mist' },\r\n//   { label: 'Marduk' },\r\n//   { label: 'Gorgoroth' },\r\n//   { label: 'Dark Funeral' },\r\n//   { label: 'Mayhem' },\r\n//   { label: 'Nile' },\r\n//   { label: 'Napalm Death' },\r\n//   { label: 'Wormed' },\r\n//   { label: 'Ulcerate' },\r\n//   { label: 'Ved Buens Ende' },\r\n//   { label: 'Dodheimsgard' },\r\n//   { label: 'Immortal' },\r\n//   { label: 'Isahn' },\r\n//   { label: 'Leprous' },\r\n//   { label: 'Shining' },\r\n//   { label: 'Code' },\r\n//   { label: 'Lifelover' },\r\n//   { label: 'Abyssic Hate' },\r\n//   { label: 'Gojira' },\r\n// ];\r\n\r\n// const listEl = document.querySelector('.js-list');\r\n// const filterEL = document.querySelector('#filter');\r\n// const markList = markUp(bands);\r\n// listEl.innerHTML = markList;\r\n\r\n// filterEL.addEventListener(\"input\", _.debounce(onFilter, 500));\r\n\r\n// function onFilter(e) {\r\n//   const filter = e.target.value.toLowerCase();\r\n//   const filteredItems = bands.filter(band => band.label.toLowerCase().includes(filter));\r\n//   const filteredMarkUp = markUp(filteredItems);\r\n//   listEl.innerHTML = filteredMarkUp;\r\n\r\n// }\r\n\r\n// function markUp(items) {\r\n//   return items.map(item => `<li>${item.label}</li>`).join(\"\");\r\n// }\r\n\r\nconst lazyImages = document.querySelectorAll('img[loading=\"lazy\"]');\r\n\r\nlazyImages.forEach((image) => {\r\n  image.addEventListener(\"load\", onImageLoaded, { once: true });\r\n});\r\n\r\nfunction onImageLoaded(evt) {\r\n  evt.target.classList.add(\"appear\");\r\n}\r\n\r\n\r\n"]}